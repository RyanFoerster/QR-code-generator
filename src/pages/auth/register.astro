---
import Layout from "../../layouts/Layout.astro";

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (accessToken && refreshToken) {
  return redirect("/dashboard");
}
---

<Layout title="Inscription - Wipay">
  <!-- Header simple -->
  <header class="bg-gray-800/50 backdrop-blur-xl border-b border-gray-700/50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between items-center h-16">
        <div class="flex items-center">
          <a href="/" class="flex items-center">
            <div class="w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center">
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z"></path>
          </svg>
            </div>
            <span class="ml-3 text-xl font-bold text-white">Wipay</span>
          </a>
        </div>
        
        <div class="flex items-center space-x-4">
          <a href="/auth/signin" class="text-gray-300 hover:text-white transition-colors">
            Déjà un compte ?
          </a>
        </div>
      </div>
    </div>
  </header>

  <!-- Contenu principal -->
  <main class="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 py-12">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="bg-gray-800/50 backdrop-blur-xl p-8 rounded-2xl border border-gray-700/50 max-w-md mx-auto">
        <h1 class="text-3xl font-bold text-center text-white mb-2">
          Créer un compte
        </h1>
        <p class="text-gray-300 text-center mb-8">
          Commencez à générer vos QR codes de paiement
        </p>

        <form id="register-form" class="space-y-6" action="/api/auth/register" method="POST">
          <div>
            <label for="email" class="block text-sm font-medium text-gray-300 mb-2">
              Adresse email
            </label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300"
              placeholder="votre@email.com"
            />
          </div>

          <div>
            <label for="password" class="block text-sm font-medium text-gray-300 mb-2">
              Mot de passe
            </label>
            <input
              type="password"
              id="password"
              name="password"
              required
              minlength="6"
              class="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300"
              placeholder="Minimum 6 caractères"
            />
          </div>

          <div>
            <label for="confirmPassword" class="block text-sm font-medium text-gray-300 mb-2">
              Confirmer le mot de passe
            </label>
            <input
              type="password"
              id="confirmPassword"
              name="confirmPassword"
              required
              minlength="6"
              class="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300"
              placeholder="Confirmer votre mot de passe"
            />
          </div>

          <div class="flex items-start">
            <input
              type="checkbox"
              id="terms"
              name="terms"
              required
              class="mt-1 w-4 h-4 text-purple-600 bg-gray-700 border-gray-600 rounded focus:ring-purple-500"
            />
            <label for="terms" class="ml-3 text-sm text-gray-300">
              J'accepte les <a href="/terms" class="text-purple-400 hover:text-purple-300">conditions d'utilisation</a> 
              et la <a href="/privacy" class="text-purple-400 hover:text-purple-300">politique de confidentialité</a>
            </label>
          </div>

          <button
            type="submit"
            class="w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white py-3 px-4 rounded-xl font-semibold hover:from-purple-700 hover:to-pink-700 transition-all duration-300 transform hover:scale-105"
          >
            Créer mon compte
          </button>
        </form>

        <!-- Messages d'erreur/succès -->
        <div id="error-message" class="hidden mt-6 p-4 bg-red-900/50 border border-red-500/50 rounded-xl text-red-200 text-center">
          <div class="flex items-center justify-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
            </svg>
            <span id="error-text">Une erreur est survenue</span>
          </div>
        </div>

        <div class="mt-6 text-center">
          <p class="text-gray-400">
            Déjà un compte ? 
            <a href="/auth/signin" class="text-purple-400 hover:text-purple-300 font-medium">
              Se connecter
            </a>
          </p>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('register-form') as HTMLFormElement;
    const errorMessage = document.getElementById('error-message') as HTMLElement;
    const errorText = document.getElementById('error-text') as HTMLElement;

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const password = formData.get('password') as string;
      const confirmPassword = formData.get('confirmPassword') as string;

      // Validation client-side
      if (password !== confirmPassword) {
        showError('Les mots de passe ne correspondent pas');
        return;
      }

      try {
        const response = await fetch('/api/auth/register', {
          method: 'POST',
          body: formData
        });

        if (!response.ok) {
          const text = await response.text();
          throw new Error(text || 'Erreur lors de l\'inscription');
        }

        // Redirection après inscription réussie
        window.location.href = '/dashboard';
      } catch (error) {
        console.error('Erreur:', error);
        showError(error instanceof Error ? error.message : 'Une erreur est survenue');
      }
    });

    function showError(message: string): void {
      if (errorMessage && errorText) {
        errorText.textContent = message;
        errorMessage.classList.remove('hidden');
        
        // Auto-masquer après 5 secondes
        setTimeout(() => {
          errorMessage.classList.add('hidden');
        }, 5000);
      }
    }
  });
</script>

<style>
  .step-content {
    animation: fadeIn 0.5s ease-in-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style> 
---
import { supabase } from "../lib/supabase";
import { STRIPE_PLANS } from "../lib/stripe-config";
import Layout from "../layouts/Layout.astro";

// V√©rifier si l'utilisateur est connect√©
const accessToken = Astro.cookies.get("sb-access-token");
let user = null;
let userStats = null;

if (accessToken) {
  const { data: { user: authUser } } = await supabase.auth.getUser(accessToken.value);
  user = authUser;
  
  if (user) {
    // R√©cup√©rer les statistiques utilisateur avec la nouvelle vue
    const { data: stats } = await supabase
      .from("user_stats")
      .select("*")
      .eq("id", user.id)
      .single();
    userStats = stats;
  }
}
---

<Layout title="Pricing - Wipay">
  <!-- Header -->
  <header class="bg-gray-800/50 backdrop-blur-xl border-b border-gray-700/50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between items-center h-16">
        <div class="flex items-center">
          <a href={user ? "/dashboard" : "/"} class="flex items-center">
            <div class="w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center">
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z"></path>
              </svg>
            </div>
            <span class="ml-3 text-xl font-bold text-white">Wipay</span>
          </a>
        </div>
        
        <div class="flex items-center space-x-4">
          {user ? (
            <a href="/dashboard" class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
              Dashboard
            </a>
          ) : (
            <div class="flex space-x-3">
              <a href="/auth/signin" class="text-gray-300 hover:text-white transition-colors">
                Connexion
              </a>
              <a href="/auth/register" class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
                S'inscrire
              </a>
            </div>
          )}
        </div>
      </div>
    </div>
  </header>

  <!-- Contenu principal -->
  <main class="py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Header de la page -->
      <div class="text-center mb-12">
        <h1 class="text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent mb-4">
          Choisissez votre plan
        </h1>
        <p class="text-xl text-gray-300 max-w-3xl mx-auto">
          Des QR codes illimit√©s avec des fonctionnalit√©s avanc√©es pour tous vos besoins
        </p>
        
        {userStats && (
          <div class="mt-6 p-4 bg-blue-900/30 border border-blue-500/50 rounded-xl max-w-md mx-auto">
            <p class="text-blue-200 text-sm">
              Plan actuel : <span class="font-semibold">
                {userStats.current_plan_type === 'premium' ? 'Premium' :
                 userStats.current_plan_type === 'credits' ? 'Cr√©dits disponibles' : 'Aucun plan'}
              </span>
            </p>
            <p class="text-blue-300 text-xs mt-1">
              {userStats.current_plan_type === 'premium' ? 
                `${userStats.qr_codes_used_this_month}/‚àû QR codes utilis√©s ce mois` :
                `${userStats.available_credits} cr√©dits disponibles`
              }
            </p>
            {userStats.current_plan_type === 'credits' && userStats.available_credits > 0 && (
              <p class="text-green-300 text-xs mt-1">
                ‚ú® Vous avez {userStats.available_credits} QR code{userStats.available_credits > 1 ? 's' : ''} disponible{userStats.available_credits > 1 ? 's' : ''}
              </p>
            )}
            {userStats.current_plan_type === 'premium' && userStats.subscription_current_period_end && (
              <p class="text-green-300 text-xs mt-1">
                üîÑ Renouvellement le {new Date(userStats.subscription_current_period_end).toLocaleDateString('fr-FR')}
              </p>
            )}
          </div>
        )}
      </div>

      <!-- Plans de pricing -->
      <div class="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
        <!-- Plan Unique -->
        <div class="bg-gray-800/50 backdrop-blur-xl p-8 rounded-2xl border border-gray-700/50 relative">
          {userStats?.current_plan_type === 'credits' && userStats.available_credits > 0 && (
            <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
              <span class="bg-green-600 text-white px-3 py-1 rounded-full text-sm font-semibold">
                Cr√©dits disponibles
              </span>
            </div>
          )}
          
          <div class="text-center">
            <h3 class="text-2xl font-bold text-white mb-2">Paiement Unique</h3>
            <div class="mb-6">
              <span class="text-4xl font-bold text-white">{STRIPE_PLANS.one_time.price}‚Ç¨</span>
              <span class="text-gray-400">/une fois</span>
            </div>
            
            <ul class="space-y-4 mb-8 text-left">
              {STRIPE_PLANS.one_time.features.map(feature => (
                <li class="flex items-center text-gray-300">
                  <svg class="w-5 h-5 text-green-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  {feature}
                </li>
              ))}
            </ul>
            
            {user ? (
              <button 
                data-plan="one_time"
                class="plan-select-btn w-full bg-gradient-to-r from-blue-600 to-cyan-600 text-white py-3 px-4 rounded-xl font-semibold hover:from-blue-700 hover:to-cyan-700 transform hover:scale-105 transition-all duration-300"
              >
                {userStats?.current_plan_type === 'credits' ? 
                  `Acheter un QR code suppl√©mentaire (+1)` : 
                  'Acheter maintenant'
                }
              </button>
            ) : (
              <a href="/auth/register" class="block w-full bg-gradient-to-r from-blue-600 to-cyan-600 text-white py-3 px-4 rounded-xl font-semibold hover:from-blue-700 hover:to-cyan-700 transform hover:scale-105 transition-all duration-300 text-center">
                S'inscrire pour acheter
              </a>
            )}
          </div>
        </div>

        <!-- Plan Premium -->
        <div class="bg-gradient-to-br from-purple-900/50 to-pink-900/50 backdrop-blur-xl p-8 rounded-2xl border border-purple-500/50 relative transform scale-105">
          {userStats?.current_plan_type === 'premium' ? (
            <div class="absolute -top-3 left-1/2 transform -translate-x-1/2">
              <span class="bg-green-600 text-white px-3 py-1 rounded-full text-sm font-semibold">
                Plan actuel
              </span>
            </div>
          ) : (
            <div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
              <span class="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-4 py-1 rounded-full text-sm font-semibold">
                Populaire
              </span>
            </div>
          )}
          
          <div class="text-center">
            <h3 class="text-2xl font-bold text-white mb-2">Premium</h3>
            <div class="mb-6">
              <span class="text-4xl font-bold text-white">{STRIPE_PLANS.premium.price}‚Ç¨</span>
              <span class="text-gray-400">/mois</span>
            </div>
            
            <ul class="space-y-4 mb-8 text-left">
              {STRIPE_PLANS.premium.features.map(feature => (
                <li class="flex items-center text-gray-300">
                  <svg class="w-5 h-5 text-green-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  {feature}
                </li>
              ))}
            </ul>
            
            {user ? (
              userStats?.current_plan_type === 'premium' ? (
                <div class="space-y-3">
                  <button disabled class="w-full bg-gray-600 text-gray-400 py-3 px-4 rounded-xl font-semibold cursor-not-allowed">
                    Plan d√©j√† activ√©
                  </button>
                  <button 
                    id="manage-subscription-btn"
                    class="w-full bg-gradient-to-r from-gray-600 to-gray-700 text-white py-2 px-4 rounded-lg text-sm font-medium hover:from-gray-700 hover:to-gray-800 transition-all duration-300"
                  >
                    G√©rer l'abonnement
                  </button>
                </div>
              ) : (
                <button 
                  data-plan="premium"
                  class="plan-select-btn w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white py-3 px-4 rounded-xl font-semibold hover:from-purple-700 hover:to-pink-700 transform hover:scale-105 transition-all duration-300"
                >
                  Choisir Premium
                </button>
              )
            ) : (
              <a href="/auth/register" class="block w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white py-3 px-4 rounded-xl font-semibold hover:from-purple-700 hover:to-pink-700 transform hover:scale-105 transition-all duration-300 text-center">
                S'inscrire pour Premium
              </a>
            )}
          </div>
        </div>
      </div>

      <!-- FAQ -->
      <div class="mt-20">
        <h2 class="text-3xl font-bold text-center text-white mb-12">
          Questions fr√©quentes
        </h2>
        
        <div class="max-w-4xl mx-auto space-y-6">
          <div class="bg-gray-800/50 backdrop-blur-xl p-6 rounded-xl border border-gray-700/50">
            <h3 class="text-lg font-semibold text-white mb-2">
              Puis-je changer de plan √† tout moment ?
            </h3>
            <p class="text-gray-300">
              Oui, vous pouvez upgrader ou downgrader votre plan √† tout moment. Les changements prennent effet imm√©diatement.
            </p>
          </div>
          
          <div class="bg-gray-800/50 backdrop-blur-xl p-6 rounded-xl border border-gray-700/50">
            <h3 class="text-lg font-semibold text-white mb-2">
              Quelle est la diff√©rence entre les deux plans ?
            </h3>
            <p class="text-gray-300">
              Le plan unique vous permet de cr√©er 1 QR code personnalis√© pour {STRIPE_PLANS.one_time.price}‚Ç¨. Le plan Premium vous donne acc√®s illimit√© √† toutes les fonctionnalit√©s pour {STRIPE_PLANS.premium.price}‚Ç¨/mois.
            </p>
          </div>
          
          <div class="bg-gray-800/50 backdrop-blur-xl p-6 rounded-xl border border-gray-700/50">
            <h3 class="text-lg font-semibold text-white mb-2">
              Les QR codes ont-ils une date d'expiration ?
            </h3>
            <p class="text-gray-300">
              Non, tous les QR codes g√©n√©r√©s restent valides ind√©finiment, m√™me si vous changez de plan.
            </p>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Footer -->
  <footer class="bg-gray-800/30 border-t border-gray-700/50 mt-20">
    <div class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
      <div class="text-center text-gray-400">
        <p>¬© 2024 Wipay. Tous droits r√©serv√©s.</p>
      </div>
    </div>
  </footer>

  <!-- Messages de feedback -->
  <div id="loading-message" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center hidden">
    <div class="bg-gray-800 p-6 rounded-xl border border-gray-700 text-center">
      <div class="animate-spin w-8 h-8 border-4 border-purple-500 border-t-transparent rounded-full mx-auto mb-4"></div>
      <p class="text-white font-medium">Pr√©paration du paiement...</p>
    </div>
  </div>

  <div id="error-message" class="fixed top-4 right-4 bg-red-600 text-white p-4 rounded-xl shadow-lg z-50 hidden">
    <div class="flex items-center">
      <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      <span id="error-text">Une erreur est survenue</span>
    </div>
  </div>
</Layout>

<script define:vars={{ user, userStats }}>
  // Gestion de la s√©lection de plan et du paiement
  document.addEventListener('DOMContentLoaded', () => {
    const planButtons = document.querySelectorAll('.plan-select-btn');
    const manageSubscriptionBtn = document.getElementById('manage-subscription-btn');
    const loadingMessage = document.getElementById('loading-message');
    const errorMessage = document.getElementById('error-message');
    const errorText = document.getElementById('error-text');

    // Fonction pour afficher les messages
    function showLoading() {
      loadingMessage?.classList.remove('hidden');
    }

    function hideLoading() {
      loadingMessage?.classList.add('hidden');
    }

    function showError(message) {
      if (errorText) errorText.textContent = message;
      errorMessage?.classList.remove('hidden');
      setTimeout(() => {
        errorMessage?.classList.add('hidden');
      }, 5000);
    }

    // Gestion du clic sur les boutons de plan
    planButtons.forEach(button => {
      button.addEventListener('click', async () => {
        const planType = button.dataset.plan;
        
        if (!user) {
          window.location.href = '/auth/register';
          return;
        }

        if (!planType) {
          showError('Plan non sp√©cifi√©');
          return;
        }

        // V√©rifier si l'utilisateur a d√©j√† le plan Premium
        if (userStats?.current_plan_type === 'premium' && planType === 'premium') {
          showError('Vous avez d√©j√† ce plan');
          return;
        }

        try {
          showLoading();

          // Utiliser l'API appropri√©e selon le contexte
          const apiEndpoint = userStats ? '/api/change-subscription' : '/api/create-checkout-session';
          const requestBody = userStats ? 
            { planType: planType } : 
            { planType: planType, userEmail: user.email, userId: user.id };

          // Cr√©er la session de paiement
          const response = await fetch(apiEndpoint, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(requestBody),
          });

          if (!response.ok) {
            const error = await response.json();
            throw new Error(error.message || 'Erreur lors de la cr√©ation de la session de paiement');
          }

          const { sessionUrl } = await response.json();
          
          // Rediriger vers Stripe Checkout
          window.location.href = sessionUrl;

        } catch (error) {
          console.error('Erreur:', error);
          hideLoading();
          showError(error.message || 'Une erreur est survenue lors du paiement');
        }
      });
    });

    // Gestion du bouton "G√©rer l'abonnement"
    if (manageSubscriptionBtn) {
      manageSubscriptionBtn.addEventListener('click', async () => {
        try {
          showLoading();

          const response = await fetch('/api/billing-portal', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
          });

          if (!response.ok) {
            const error = await response.json();
            throw new Error(error.message || 'Erreur lors de l\'acc√®s au portail de facturation');
          }

          const { url } = await response.json();
          
          // Rediriger vers le portail de facturation Stripe
          window.location.href = url;

        } catch (error) {
          console.error('Erreur:', error);
          hideLoading();
          showError(error.message || 'Une erreur est survenue');
        }
      });
    }

    // Gestion des param√®tres URL (succ√®s/annulation)
    const urlParams = new URLSearchParams(window.location.search);
    
    if (urlParams.get('success') === 'true') {
      // Afficher un message de succ√®s
      const successDiv = document.createElement('div');
      successDiv.className = 'fixed top-4 right-4 bg-green-600 text-white p-4 rounded-xl shadow-lg z-50';
      successDiv.innerHTML = `
        <div class="flex items-center">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          <span>Paiement r√©ussi ! Votre plan a √©t√© activ√©.</span>
        </div>
      `;
      document.body.appendChild(successDiv);
      
      setTimeout(() => {
        successDiv.remove();
        // Rediriger vers le dashboard
        window.location.href = '/dashboard';
      }, 3000);
    }
    
    if (urlParams.get('cancelled') === 'true') {
      showError('Paiement annul√©. Vous pouvez r√©essayer √† tout moment.');
    }
  });
</script>

<style>
  /* Animations et effets */
  .backdrop-blur-xl {
    backdrop-filter: blur(20px);
  }
  
  /* Animation pour les boutons */
  .plan-select-btn:hover {
    box-shadow: 0 10px 25px rgba(139, 92, 246, 0.3);
  }
  
  /* Focus states pour l'accessibilit√© */
  button:focus-visible,
  a:focus-visible {
    outline: 2px solid rgb(139, 92, 246);
    outline-offset: 2px;
  }
  
  /* Animation de chargement */
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
  
  .animate-spin {
    animation: spin 1s linear infinite;
  }
</style>
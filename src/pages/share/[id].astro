---
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header.astro";
import { supabase } from "../../lib/supabase";

// Récupérer l'ID du QR code depuis les paramètres de l'URL
const { id } = Astro.params;

// Vérifier si l'ID est fourni
if (!id) {
  console.error("Aucun ID de QR code fourni dans l'URL");
  return Astro.redirect("/");
}

// Récupérer les données du QR code directement via l'API
let qrCode = null;
let error = null;

try {
  // Log détaillé pour le debug
  console.log(`Page de partage - Tentative de récupération du QR code avec ID: ${id}, URL: ${Astro.url.origin}/api/get-qr-code?id=${id}`);
  
  // Essayer d'abord de récupérer directement depuis Supabase, sans passer par l'API
  console.log(`Tentative de récupération directe via Supabase pour l'ID: ${id}`);
  const { data: directData, error: directError } = await supabase
    .from("qr_codes")
    .select("*")
    .eq("id", id);
  
  if (directError) {
    console.error(`Erreur lors de la récupération directe via Supabase:`, directError);
  } else {
    console.log(`Résultat de la récupération directe:`, {
      found: directData && directData.length > 0,
      count: directData?.length || 0
    });
  }
  
  // Ensuite essayer via l'API
  console.log(`Tentative de récupération via l'API pour l'ID: ${id}`);
  const response = await fetch(`${Astro.url.origin}/api/get-qr-code?id=${id}`);
  
  // Log de la réponse HTTP
  console.log(`Réponse HTTP: ${response.status} ${response.statusText}`);
  
  // Log de la réponse pour débogage
  const responseData = await response.json();
  console.log(`Réponse de l'API:`, responseData);
  
  if (!response.ok) {
    error = responseData.message || "QR code non trouvé";
    console.error(`Erreur API:`, error);
    
    // Si l'API échoue mais que nous avons trouvé des données directement, utilisons-les
    if (directData && directData.length > 0) {
      console.log(`Utilisation des données récupérées directement car l'API a échoué`);
      qrCode = {
        ...directData[0],
        formatted_amount: `${directData[0].amount.toFixed(2)}€`,
        formatted_date: new Date(directData[0].created_at).toLocaleDateString("fr-FR", {
          day: "2-digit",
          month: "2-digit",
          year: "numeric",
        }),
      };
      error = null;
    }
  } else {
    if (!responseData.success || !responseData.qrCode) {
      error = "QR code non trouvé";
      console.error(`Données invalides:`, responseData);
    } else {
      qrCode = {
        ...responseData.qrCode,
        formatted_amount: `${responseData.qrCode.amount.toFixed(2)}€`,
        formatted_date: new Date(responseData.qrCode.created_at).toLocaleDateString("fr-FR", {
          day: "2-digit",
          month: "2-digit",
          year: "numeric",
        }),
      };
      console.log(`QR code récupéré avec succès:`, qrCode.id);
    }
  }
  
  // Si le QR code est trouvé, incrémenter le compteur de vues
  if (qrCode) {
    try {
      const { error: updateError } = await supabase
        .from("qr_codes")
        .update({ view_count: (qrCode.view_count || 0) + 1 })
        .eq("id", id);
      
      if (updateError) {
        console.error("Erreur lors de l'incrémentation du compteur de vues:", updateError);
      } else {
        console.log(`Compteur de vues incrémenté pour le QR code ${id}`);
      }
    } catch (updateError) {
      console.error("Erreur lors de l'incrémentation du compteur de vues:", updateError);
    }
  }
} catch (e) {
  console.error("Erreur inattendue lors de la récupération du QR code:", e);
  error = "Une erreur est survenue lors de la connexion à l'API";
}

// Obtenir l'URL absolue pour le partage
const currentUrl = new URL(Astro.request.url);
const shareUrl = currentUrl.href;
---

<Layout title={qrCode ? `QR Code de paiement ${qrCode.formatted_amount} - Wipay` : "QR Code - Wipay"}>
  <div class="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900">
    <Header />
    
    <main class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-10">
      <!-- En-tête de la page -->
      <div class="mb-8 text-center">
        <h1 class="text-3xl sm:text-4xl font-bold text-white mb-4">
          QR Code de Paiement Partagé
        </h1>
        <p class="text-gray-300 max-w-2xl mx-auto">
          Scannez ce QR code avec votre application bancaire pour effectuer le paiement instantanément
        </p>
      </div>
      
      {error && (
        <div class="bg-red-900/50 border border-red-500 rounded-xl p-6 my-8 text-center">
          <svg class="w-16 h-16 text-red-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
          </svg>
          <h2 class="text-xl font-semibold text-white mb-2">QR Code non disponible</h2>
          <p class="text-red-200 mb-4">{error}</p>
          <a href="/" class="inline-block bg-purple-600 hover:bg-purple-700 text-white font-medium px-6 py-3 rounded-lg transition-colors">
            Retour à l'accueil
          </a>
        </div>
      )}
      
      {qrCode && (
        <div class="grid md:grid-cols-2 gap-8 items-center">
          <!-- Affichage du QR code -->
          <div class="bg-white/10 backdrop-blur-xl p-6 rounded-3xl border border-white/20 text-center">
            <div class="bg-white p-4 rounded-xl mx-auto inline-block">
              <img 
                id="qr-image" 
                src={`https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${encodeURIComponent(qrCode.qr_data)}&format=png&margin=10&color=${qrCode.custom_colors?.qr_color?.replace('#', '') || '000000'}&bgcolor=${qrCode.custom_colors?.transparent ? 'FFFFFF' : qrCode.custom_colors?.bg_color?.replace('#', '') || 'FFFFFF'}`}
                alt="QR Code de paiement" 
                class="mx-auto rounded-lg shadow-2xl max-w-full h-auto"
              />
            </div>
            <p class="text-purple-200 mt-4 text-sm">
              Scannez ce code avec votre application bancaire
            </p>
          </div>
          
          <!-- Détails du paiement -->
          <div class="space-y-6">
            <div class="p-6 bg-gradient-to-r from-blue-900/50 to-purple-900/50 rounded-2xl border border-blue-500/30">
              <h3 class="font-bold text-white mb-4 flex items-center text-lg">
                <svg class="w-5 h-5 mr-2 text-blue-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                Détails du paiement
              </h3>
              <div class="text-sm text-gray-300 space-y-3">
                <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center p-3 bg-gray-800/50 rounded-lg">
                  <strong class="text-blue-400">IBAN :</strong> 
                  <span class="font-mono break-all sm:break-normal">{qrCode.iban}</span>
                </div>
                <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center p-3 bg-gray-800/50 rounded-lg">
                  <strong class="text-green-400">Montant :</strong>
                  <span>{qrCode.formatted_amount}</span>
                </div>
                
                {qrCode.communication && (
                  <div class="flex flex-col sm:flex-row sm:justify-between sm:items-start p-3 bg-gray-800/50 rounded-lg gap-1 sm:gap-2">
                    <strong class="text-purple-400 flex-shrink-0">Communication :</strong> 
                    <span class="break-words">{qrCode.communication}</span>
                  </div>
                )}
                
                {qrCode.beneficiary && (
                  <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center p-3 bg-gray-800/50 rounded-lg">
                    <strong class="text-pink-400">Bénéficiaire :</strong> 
                    <span class="break-words">{qrCode.beneficiary}</span>
                  </div>
                )}
                
                <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center p-3 bg-gray-800/50 rounded-lg">
                  <strong class="text-amber-400">Créé le :</strong> 
                  <span>{qrCode.formatted_date}</span>
                </div>
              </div>
            </div>
            
            <!-- Actions -->
            <div class="flex flex-col sm:flex-row gap-4">
              <a href="/" class="flex-1 bg-gradient-to-r from-purple-600 to-pink-600 py-3 px-6 rounded-xl font-semibold text-white text-center hover:from-purple-700 hover:to-pink-700 transition-all duration-300 flex items-center justify-center gap-2">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Créer mon QR code
              </a>
              <button 
                type="button" 
                id="download-btn" 
                class="flex-1 bg-gradient-to-r from-green-600 to-emerald-600 py-3 px-6 rounded-xl font-semibold text-white hover:from-green-700 hover:to-emerald-700 transition-all duration-300 flex items-center justify-center gap-2"
                data-qr-url={`https://api.qrserver.com/v1/create-qr-code/?size=600x600&data=${encodeURIComponent(qrCode.qr_data)}&format=png&margin=10&color=${qrCode.custom_colors?.qr_color?.replace('#', '') || '000000'}&bgcolor=${qrCode.custom_colors?.transparent ? 'FFFFFF' : qrCode.custom_colors?.bg_color?.replace('#', '') || 'FFFFFF'}`}
                data-amount={qrCode.amount.toFixed(2)}
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                </svg>
                Télécharger
              </button>
            </div>
            
            <!-- Partage -->
            <div class="p-5 bg-gradient-to-r from-indigo-900/30 to-blue-900/30 rounded-xl border border-indigo-500/30">
              <h3 class="font-bold text-white mb-4 flex items-center text-lg">
                <svg class="w-5 h-5 mr-2 text-indigo-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"></path>
                </svg>
                Partager ce QR Code
              </h3>
              <div class="grid grid-cols-3 sm:grid-cols-6 gap-2">
                <button id="share-whatsapp" class="share-btn bg-green-600 hover:bg-green-700 text-white p-2 rounded-lg transition-colors flex flex-col items-center justify-center text-xs">
                  <svg class="w-5 h-5 mb-1" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.297-.497.1-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
                  </svg>
                  WhatsApp
                </button>
                <button id="share-messenger" class="share-btn bg-blue-600 hover:bg-blue-700 text-white p-2 rounded-lg transition-colors flex flex-col items-center justify-center text-xs">
                  <svg class="w-5 h-5 mb-1" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0C5.373 0 0 4.974 0 11.111c0 3.498 1.744 6.614 4.469 8.652V24l4.088-2.242c1.092.3 2.246.464 3.443.464 6.627 0 12-4.975 12-11.111S18.627 0 12 0zm1.191 14.963l-3.055-3.26-5.963 3.26L10.732 8l3.131 3.259L19.752 8l-6.561 6.963z"/>
                  </svg>
                  Messenger
                </button>
                <button id="share-telegram" class="share-btn bg-sky-500 hover:bg-sky-600 text-white p-2 rounded-lg transition-colors flex flex-col items-center justify-center text-xs">
                  <svg class="w-5 h-5 mb-1" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.96 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
                  </svg>
                  Telegram
                </button>
                <button id="share-email" class="share-btn bg-gray-600 hover:bg-gray-700 text-white p-2 rounded-lg transition-colors flex flex-col items-center justify-center text-xs">
                  <svg class="w-5 h-5 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                  </svg>
                  Email
                </button>
                <button id="share-linkedin" class="share-btn bg-blue-800 hover:bg-blue-900 text-white p-2 rounded-lg transition-colors flex flex-col items-center justify-center text-xs">
                  <svg class="w-5 h-5 mb-1" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                  </svg>
                  LinkedIn
                </button>
                <button id="share-copy" class="share-btn bg-purple-600 hover:bg-purple-700 text-white p-2 rounded-lg transition-colors flex flex-col items-center justify-center text-xs">
                  <svg class="w-5 h-5 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3"/>
                  </svg>
                  Copier
                </button>
              </div>
              <div id="share-feedback" class="hidden mt-3 p-2 bg-green-900/50 text-green-200 text-xs text-center rounded-lg">
                Lien copié dans le presse-papiers !
              </div>
            </div>
          </div>
        </div>
      )}
    </main>
    
    <!-- Pied de page -->
    <footer class="py-8 text-center text-gray-400 text-sm">
      <p>© {new Date().getFullYear()} Wipay - QR Codes de paiement</p>
    </footer>
  </div>
</Layout>

<script define:vars={{ shareUrl, qrCodeId: id }}>
  // Fonction pour télécharger le QR code
  document.addEventListener('DOMContentLoaded', () => {
    // Téléchargement du QR Code
    const downloadBtn = document.getElementById('download-btn');
    if (downloadBtn) {
      downloadBtn.addEventListener('click', async () => {
        try {
          const qrUrl = downloadBtn.getAttribute('data-qr-url');
          const amount = downloadBtn.getAttribute('data-amount');
          
          if (!qrUrl) {
            throw new Error('URL du QR code non disponible');
          }
          
          // Télécharger l'image
          const response = await fetch(qrUrl);
          const blob = await response.blob();
          const url = URL.createObjectURL(blob);
          const link = document.createElement('a');
          link.href = url;
          link.download = `qr-code-paiement-${amount}EUR-${new Date().toISOString().slice(0, 10)}.png`;
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);
          URL.revokeObjectURL(url);
          
          // Incrémenter le compteur de téléchargements si possible
          try {
            await fetch('/api/increment-download-count', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ qrCodeId }),
            });
          } catch (error) {
            console.error('Erreur lors de l\'incrémentation du compteur:', error);
          }
        } catch (error) {
          console.error('Erreur lors du téléchargement:', error);
          alert('Erreur lors du téléchargement du QR code');
        }
      });
    }
    
    // Partage sur les réseaux sociaux
    const shareBtns = document.querySelectorAll('.share-btn');
    const shareFeedback = document.getElementById('share-feedback');
    
    // WhatsApp
    document.getElementById('share-whatsapp')?.addEventListener('click', () => {
      const text = `Paiement via QR code: ${shareUrl}`;
      window.open(`https://wa.me/?text=${encodeURIComponent(text)}`, '_blank');
    });
    
    // Messenger
    document.getElementById('share-messenger')?.addEventListener('click', () => {
      window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}`, '_blank');
    });
    
    // Telegram
    document.getElementById('share-telegram')?.addEventListener('click', () => {
      window.open(`https://t.me/share/url?url=${encodeURIComponent(shareUrl)}`, '_blank');
    });
    
    // Email
    document.getElementById('share-email')?.addEventListener('click', () => {
      const subject = encodeURIComponent('QR Code de paiement');
      const body = encodeURIComponent(`Voici un QR code de paiement: ${shareUrl}`);
      window.location.href = `mailto:?subject=${subject}&body=${body}`;
    });
    
    // LinkedIn
    document.getElementById('share-linkedin')?.addEventListener('click', () => {
      window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(shareUrl)}`, '_blank');
    });
    
    // Copier le lien
    document.getElementById('share-copy')?.addEventListener('click', () => {
      navigator.clipboard.writeText(shareUrl).then(() => {
        if (shareFeedback) {
          shareFeedback.classList.remove('hidden');
          setTimeout(() => {
            shareFeedback.classList.add('hidden');
          }, 3000);
        }
      });
    });
  });
</script> 